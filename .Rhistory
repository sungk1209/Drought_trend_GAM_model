<<<<<<< Updated upstream
lon_i <- match(nearest_pt$lon, lon_list)
nearest_pt$lat_index <-lat_i
nearest_pt$lon_index <- lon_i
### Extract variable data
var_data_j <-  ncvar_get(nc_file, "pr", start=c(nearest_pt$lon_index, nearest_pt$lat_index, 1), count=c(1,1,-1))
### Extract variable
var_df <- tibble(site = nearest_pt$a, date = date_list, variable = "precip", value = var_data_j)
### Close the nc file
nc_close(nc_file)
p1
nearest_pt
head(var_df)
require(lubridate)
require(tidyverse)
require(mgcv)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
require(viridis)
library(ggthemes)
library(cowplot)
require(colorblindr)
select <- dplyr::select
data_path <- "../data"
output_path <- "../output/"
getwd()
lc
loc
inst_df <- readRDS(file =paste0(output_path,loc$site[1],"instrument_df.rds"))
naspa_df <- readRDS(file = paste0(output_path,loc$site[1],"predictedpreip.rds"))
pred_df<- readRDS(file = paste0(output_path,loc$site[1],"pred_df.rds"))
loc <- data.frame(site = "COL_OH",
lon = c(-83,-82.5),
lat = c(39.5, 40))
inst_df <- readRDS(file =paste0(output_path,loc$site[1],"instrument_df.rds"))
naspa_df <- readRDS(file = paste0(output_path,loc$site[1],"predictedpreip.rds"))
pred_df<- readRDS(file = paste0(output_path,loc$site[1],"pred_df.rds"))
naspa_df <- naspa_df %>%
group_by(date) %>%
summarize(precip = mean(precip, na.rm = TRUE))
inst_df <- inst_df %>%
mutate(month = month(date))
=======
n_roll <-3
n_roll_min <-2
gridmet_df <- accum_df %>%
mutate(roll_mean_3 = rollsumr(x=mprcp, k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(roll_mean_3_notna = rollsumr(x=!is.na(mprcp), k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(precip = case_when(roll_mean_3_notna  > n_roll_min ~ roll_mean_3,
TRUE ~ NA_real_)
) %>%
mutate(precip = precip/3) %>%
select(-roll_mean_3_notna,mprcp) %>%
mutate(units = "mm/month") %>%
mutate(date = as.Date(paste0(year,'-',month,'-01'))) %>%
mutate(site = loc$site[1]) %>%
mutate(variable = as.character(ncdf_df$short_name)) %>%
mutate(model = "gridmet") %>%
select(date, site, year, variable, model, precip,units)
### Close the nc file
nc_close(nc_file)
#######################################################################
## Choose a CRU file
#####################################################################
nc_cru <- nc_open(filename = "../data/cru_ts4.05.1901.2020.pre.dat.nc")
attributes(nc_cru$var)$names
var_prcp <- attributes(nc_cru$var)$names[[1]]
var_unit <- ncatt_get(nc_cru, attributes(nc_cru$var)$names[[1]], "units")
lat_list <- ncvar_get(nc_cru,"lat")
lon_list <- ncvar_get(nc_cru,"lon")
time_scale <- ncatt_get(nc_cru, "time", "units")$value %>%
str_split_fixed("since",n =2)
date_list <- ncvar_get(nc_cru, "time") + as.Date(time_scale[2])
#Example names as the row names, column 1 as longitude, and column 2 as latitude
lat_col <- which(lat_list > loc$lat[1] & lat_list < loc$lat[2])
lon_col <- which(lon_list > loc$lon[1] & lon_list < loc$lon[2])
var_data_j <- ncvar_get(nc_cru, varid= var_prcp, start = c(lon_col,lat_col,1),
count = c(1,1,-1))
var_data_j[var_data_j < -9.96920996838687e+36] <- NA
yup <- tibble(site = loc$site[1], date = date_list,
variable = var_prcp, value = var_data_j)
cru_df <- yup %>%
arrange(date) %>%
mutate(year = year(date)) %>%
mutate(model = "cru") %>%
mutate(scenario = "observed")
n_roll <- 3
n_roll_min <- 2
cru_df <- cru_df %>%
mutate(roll_mean_3 = rollsumr(x=value, k=n_roll, fill=NA, na.rm=TRUE))  %>%
#  mutate(roll_mean_3_notna = rollsumr(x=!is.na(value), k=n_roll, fill=NA, na.rm=TRUE)) %>%
#  mutate(precip = case_when(roll_mean_3_notna > n_roll_min ~ roll_mean_3,
#                              TRUE ~ NA_real_)) %>%
mutate(precip = roll_mean_3/3) %>%
mutate(units = "mm") %>%
mutate(date = as.Date(floor_date(date, "month"))) %>%
select(date, site, year, variable,model, precip,units)
################################################################
##########Combine instrumental data
###############################################################
instrument_df <- rbind(gridmet_df,cru_df)
instrument_df <- instrument_df %>%
arrange(date) %>%
drop_na(precip)
saveRDS(instrument_df,file =paste0(output.p,"/instrument_df.rds"))
p <- ggplot(data = instrument_df) +
geom_line(aes(x=date, y=precip, group = model, colour = model)) +
scale_color_manual(values = c("#1A3FD4", "orangered2")) +
labs(title =  loc$site[1],
y = "Mean prcp.(mm/month)") +
theme_classic(base_size = 30)
filename <- paste0(output.p,"/Pinst")
ggsave(filename =paste0(filename,".png"), plot = p, width =12.5, height = 8, dpi = 300)
ggsave(filename =paste0(filename,".svg"), plot = p, width =12.5, height = 8, dpi = 300)
return()
}
naspa_download <- function(loc){
fn_wm <- "NASPA_WARM_SPI.nc"
short_name <- "pr"
ncdf_df <- data.frame(short_name = c("pr"),
var_name = c("precipitation_amount"))
nc_wm <- nc_open(paste0(data_path,fn_wm))
print(nc_wm)
var1 <- attributes(nc_wm$var)
lat_list <- ncvar_get(nc_wm, "lat")
lon_list <- ncvar_get(nc_wm, "lon")
date_list <- ncvar_get(nc_wm, "time")
tm_orig <- as.Date("0000-08-01")
date_list <- tm_orig %m+% years(date_list)
lat_col <- which(lat_list > loc$lat[1] & lat_list < loc$lat[2])
lon_col <- which(lon_list > loc$lon[1] & lon_list < loc$lon[2])
var_data_k <- ncvar_get(nc_wm, varid= var1$names[1], start = c(1,lat_col,lon_col),
count = c(-1,1,1))
yuc <- tibble(date = date_list,spi3 = var_data_k) %>%
drop_na()
begin.y <- min(year(yuc$date))
end.y <- max(year(yuc$date)) -1
yrs <- list(begin.y, end.y)
### Add a month column
naspa_spi3 <- yuc %>%
mutate(year = year(date)) %>%
mutate(month = 7) %>%
complete(year = seq(begin.y,end.y), month = seq(1,12)) %>%
mutate(date = as.Date(paste0(year, "-", month, "-15"))) %>%
mutate(date = as.Date(ceiling_date(date, "month")-1)) %>%
arrange(date)
fn_co <- "NASPA_COOL_SPI.nc"
short_name <- "pr"
nc_co <- nc_open(paste0(data_path,fn_co))
print(nc_co)
var1 <- attributes(nc_co$var)
lat_list <- ncvar_get(nc_co, "lat")
lon_list <- ncvar_get(nc_co, "lon")
date_list <- ncvar_get(nc_co, "time")
tm_orig <- as.Date("0000-04-30")
date_list <- tm_orig %m+% years(date_list)
lat_col <- which(lat_list > loc$lat[1] & lat_list < loc$lat[2])
lon_col <- which(lon_list > loc$lon[1] & lon_list < loc$lon[2])
var_data_k <- ncvar_get(nc_co, varid= var1$names[1], start = c(1,lat_col,lon_col),
count = c(-1,1,1))
yuc <- tibble(date = date_list,
spi5 = var_data_k) %>%
drop_na()
naspa_spi5 <- yuc %>%
mutate(month = 4) %>%
mutate(year = year(date)) %>%
complete(year = seq(begin.y,end.y), month = seq(1,12)) %>%
mutate(date = as.Date(paste0(year, "-", month, "-15"))) %>%
mutate(date = as.Date(ceiling_date(date, "month")-1)) %>%
arrange(date)
naspa_spi3 <- naspa_spi3 %>%
mutate(spi5 = naspa_spi5$spi5)
head(naspa_spi3)
saveRDS(naspa_spi3,file = paste0(output.p,"/naspa_spi3.rds"))
#############################################################
### GPCC
##################################################################
n_days <- 12
n_roll <- 3
gpcc <- "../data/precip.mon.total.v7.nc"
nc_gpcc <- nc_open(gpcc)
print(nc_gpcc)
#gpcc_df: precipitation: total monthly precipitation
# Columbus: Lat: 39.9612 N, Lon: 82.9988 W
#loc <- data.frame(site="columbus,co",
#                  lon=c(-83,-82.5),
#                  lat= c(39.5,40))
var1 <- attributes(nc_gpcc$var)
lat_list <- ncvar_get(nc_gpcc, "lat")
lon_list <- ncvar_get(nc_gpcc, "lon")
date_list <- ncvar_get(nc_gpcc, "time")
tm_orig <- as.Date("1800-01-01")
date_list <- date_list + tm_orig
lat_col <- which(lat_list > loc$lat[1] & lat_list < loc$lat[2])
lon_col <- which(lon_list > loc$lon[1] + 360 & lon_list < loc$lon[2] + 360)
var_data_j <- ncvar_get(nc_gpcc, varid= var1$names[2], start = c(lon_col,lat_col,1),
count = c(1,1,-1))
plot(x = date_list, y = var_data_j, type = 'l')
yup <- tibble(site = loc$site[1], date = date_list,
value = as.numeric(var_data_j))
gpcc_df <- yup %>%
mutate(model = "GPCC") %>%
mutate(units = "mm/month") %>%
select(date,site, model, value,units)
n_roll <- 3
n_roll_min <- 2
gpcc_df <- gpcc_df %>%
mutate(roll_mean_3 = rollmeanr(x=value, k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(roll_mean_3_notna = rollsumr(x=!is.na(value), k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(precip = case_when(roll_mean_3_notna  > n_roll_min ~ roll_mean_3,
TRUE ~ NA_real_)
) %>%
select(-roll_mean_3_notna) %>%
mutate(date = ceiling_date(date, "month") - 1) %>%
select(date, site, model,precip,units, value)
n_roll <- 5
n_roll_min <- 4
gpcc_df <- gpcc_df %>%
mutate(roll_mean_5 = rollmeanr(x=value, k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(roll_mean_3_notna = rollsumr(x=!is.na(value), k=n_roll, fill=NA, na.rm=TRUE)) %>%
mutate(precip_5 = case_when(roll_mean_3_notna  > n_roll_min ~ roll_mean_5,
TRUE ~ NA_real_)
) %>%
select(-roll_mean_3_notna, -roll_mean_5) %>%
filter(precip >0 & precip_5 >0)
gpcc_df <- gpcc_df %>%
group_by(month(date)) %>%
mutate(shape3 = fitdist(precip, "gamma")$estimate[[1]],
rate3 = fitdist(precip, "gamma")$estimate[[2]]) %>%
mutate(prob3 = pgamma(precip, shape = shape3, rate = rate3)) %>%
mutate(spi3 = qnorm(prob3,mean = 0, sd = 1)) %>%
mutate(shape5 = fitdist(precip_5, "gamma")$estimate[[1]],
rate5 = fitdist(precip_5, "gamma")$estimate[[2]]) %>%
mutate(prob5 = pgamma(precip_5, shape = shape5, rate = rate5)) %>%
mutate(spi5 = qnorm(prob5,mean = 0, sd = 1)) %>%
ungroup()
saveRDS(gpcc_df,file = paste0(output.p,"/gpcc_df.rds"))
return(yrs)
}
### Read in
knn <- function(loc){
gpcc_df <- readRDS(file = paste0(output.p,"/gpcc_df.rds"))
naspa_spi3<- readRDS(file = paste0(output.p,"/naspa_spi3.rds"))
paras<- gpcc_df %>% select(date,shape3, rate3) %>%
group_by(month(date)) %>%
summarise(shape = mean(shape3), rate = mean(rate3)) %>%
rename(month =`month(date)`)
n_library <- length(gpcc_df$precip)
### Convert library into a dataframe
library_df <- data.frame(i = seq(1,n_library), spi_thisjuly = as.numeric(gpcc_df$spi3)) %>%
mutate(spi_nextmay = dplyr::lead(gpcc_df$spi5, n=9,  default = NA))%>%
mutate(spi_nextjuly = dplyr::lead(gpcc_df$spi3, n=12,  default = NA))%>%
drop_na()
#library_df[1:50,]
library_df <- library_df %>% select(-i)
n_neighbors <- 10
begin.y <- yrs[[1]][1]
end.y <- yrs[[2]][1] -1
predicted_df <- data.frame(year = NA)
for (year_i in c(begin.y:end.y)){
#### Eventually put this in a loop through years
date_subset <- seq(as.Date(paste0(year_i,"-08-01")),
as.Date(paste0(year_i+1,"-08-01")),
by = "month")-1
naspa_subset <- naspa_spi3 %>%
filter(date %in% date_subset)
naspa_points <- data.frame(spi_thisjuly = naspa_subset$spi3[[1]],
spi_nextapr = naspa_subset$spi5[[10]],
spi_nextjuly = naspa_subset$spi3[[13]])
if (sum(is.na(naspa_points))>0) {
next
}
### Find the k closest points
closest <- nn2(data= library_df,
query = naspa_points, k=n_neighbors)
#want to improve: pick only July
for(k in seq(1,n_neighbors)){
closest_k <- closest$nn.idx[[k]]
fragment_k <- library_df[seq(closest_k, closest_k+12),]
naspa_subset_k <- naspa_subset %>%
mutate(iter = paste0("iter_", k)) %>%
mutate(spi3 = fragment_k$spi_thisjuly)
if(k == 1){
naspa_subset_iter <- naspa_subset_k
} else {
naspa_subset_iter <- naspa_subset_iter %>% bind_rows(naspa_subset_k)
}
}
#smoothed <- loess(spi3 ~ as.numeric(date),data = naspa_subset_iter)
#predicted_k <- data.frame(date= date_subset,
#                         spi3 = predict(smoothed, newdata = naspa_subset$date))
if(is.na(predicted_df$year[1]) == TRUE){
predicted_df <- naspa_subset_iter
} else {
predicted_df <- predicted_df %>% bind_rows(naspa_subset_iter)
}
}
predicted_df <- predicted_df %>%
mutate(month = month(date)) %>%
right_join(paras, by= "month") %>%
mutate(prob = pnorm(spi3)) %>%
mutate(precip = qgamma(prob, shape = shape, rate = rate))
predicted_df$iter <- as.factor(predicted_df$iter)
saveRDS(predicted_df, file = paste0(output.p,"/pre_naspa.rds"))
return()
}
GI_model <- function(loc){
inst_df <- readRDS(file =paste0(output.p,"/instrument_df.rds"))
naspa_df <- readRDS(file = paste0(output.p,"/pre_naspa.rds"))
gpcc_df <- readRDS(file = paste0(output.p,"/gpcc_df.rds"))
#pred_df<- readRDS(file = paste0(output_path,loc$site[1],"pred_df.rds"))
inst_df <- inst_df %>%
mutate(month = month(date))
naspa_df <- naspa_df %>%
group_by(date) %>%
summarize(precip = mean(precip, na.rm = TRUE))
>>>>>>> Stashed changes
naspa_df <- naspa_df %>%
mutate(year = year(date)) %>%
mutate(month = month(date)) %>%
mutate(variable = "predicted") %>%
mutate(model = "naspa")%>%
mutate(units = "mm/month") %>%
<<<<<<< Updated upstream
mutate(site = "COL-OH") %>%
select(date,site, year, variable, model , precip, units, month)
prcp_df <- as.data.frame(rbind(inst_df,naspa_df,pred_df)) %>%
arrange(date)
prcp_df$model <- as.factor(prcp_df$model)
#second model
prcp_pos <- prcp_df %>%
filter(precip >0)
p <- ggplot(data=prcp_df %>% filter(year >1900),
aes(x=date, y = precip, group=model,colour = model)) +
=======
mutate(site = loc$site[1]) %>%
select(date,site, year, variable, model , precip, units, month)
prcp_df <- as.data.frame(rbind(inst_df,naspa_df)) %>% #,pred_df)) %>%
arrange(date)
prcp_pos <- prcp_df %>%
filter(precip >0)
prcp_pos$model <- as.factor(prcp_pos$model)
colours = c("naspa" = "green4", "cru" = "#1A3FD4", "gridmet" = "orangered3")
p <- ggplot(data=prcp_df %>% filter(month(date) == 7),
aes(x=date, y = precip, group=model,colour = model,alpha = 0.8)) +
scale_color_manual(values = colours) +
>>>>>>> Stashed changes
#facet_wrap(~model) +
geom_line() +
labs(title = "prcp",
x="year",y="precip(mm)", size = 20) +
theme_classic(base_size = 20)
<<<<<<< Updated upstream
p
ggsave(filename = paste0(output_path,loc$site[1],"prcp.png"),plot = p, width =12.5, height = 8, dpi = 300)
=======
ggsave(filename = paste0(output.p,"/prcp.png"),plot = p, width =12.5, height = 8, dpi = 300)
ggsave(filename = paste0(output.p,"/prcp.svg"),plot = p, width =12.5, height = 8, dpi = 300)
####################################################################
##########     Compare downscaled Naspa and GPCC
####################################################################
size <- dim(gpcc_df)[1]
mape_df <- gpcc_df %>%
select(date,site, precip) %>%
rename(pr_gp = precip) %>%
inner_join(naspa_df, by = "date") %>%
rename(pr_naspa = precip) %>%
mutate(MAE = abs((pr_gp - pr_naspa)/pr_gp)) %>%
mutate(nE = abs((pr_gp - pr_naspa))) %>%
select(date, site.x,pr_gp, pr_naspa,year, month, MAE,nE)
mape_df <- mape_df %>%
group_by(month) %>%
summarise(SAE = sum(MAE), nSAE = sum(pr_gp), nSE = sum(nE)) %>%
mutate(MAPE = 100 * SAE/size) %>%
mutate(nMAE = nSE/nSAE) %>%
ungroup()
# ggplot(mape_df, aes(x = month, y = MAPE)) + geom_col() +
#   labs(y = "MAE(%)") +
#   scale_x_discrete(limits=seq(1,12)) +
#   theme_classic(base_size = 20)
#
# ggplot(mape_df, aes(x = month, y = nMAE)) + geom_col() +
#   labs(y = "nMAE") +
#   scale_x_discrete(limits=seq(1,12)) +
#   theme_classic(base_size = 20)
#
# ggsave(filename = paste0(output.p,"/rmse.png"),plot = p, width =12.5, height = 8, dpi = 300)
##############################################################
####                      Modeling                       #####
##############################################################
#nknot <- (max(prcp_df$year) - min(prcp_df$year) + 1)/30
#nknot <- round(nknot) + 1
>>>>>>> Stashed changes
start_time <- Sys.time()
gam_fit <- gam(list(
precip ~ model + s(month, by = model, bs = "cc", k = 6) +
te(year, month, bs = c("cr","cc"), k = c(20,6)),
~model + s(month, by = model, bs = "cc", k = 6) +
te(year, month, bs = c("cr","cc"), k = c(20,6))),
family=gammals, link=list("identity","log"), data = prcp_pos)
end_time <- Sys.time()
<<<<<<< Updated upstream
end_time - start_time
start_time <- Sys.time()
gam_fit <- gam(list(
precip ~ model + s(month, by = model, bs = "cc", k = 6) +
te(year, month, bs = c("cr","cc"), k = c(20,6)),
~model + s(month, by = model, bs = "cc", k = 6) +
te(year, month, bs = c("cr","cc"), k = c(20,6))),
family=gammals, link=list("identity","log"), data = prcp_pos)
end_time <- Sys.time()
end_time - start_time
plot(gam_fit,all.terms=TRUE,scheme=2, pages=1)
summary(gam_fit)
=======
dur <- end_time - start_time
print(dur)
#plot(gam_fit,all.terms=TRUE,scheme=2, pages=1)
#summary(gam_fit)
saveRDS(gam_fit, file =paste0(output.p,"/model.rds"))
#gam_fit <- readRDS( file =paste0(output.p,"/model.rds"))
>>>>>>> Stashed changes
### Predict results with the new data
gam_predict <- predict(gam_fit, type="response")
gam_predict  <- gam_predict  %>%
data.frame() %>%
as_tibble() %>%
rename(est_mean = 1) %>%
rename(est_shape = 2) %>%
bind_cols(prcp_pos) %>%
select(date, month,  model, est_mean, est_shape)
<<<<<<< Updated upstream
seasonal_df <- gam_predict %>%
mutate(est_shape = 1/exp(est_shape)) %>%
mutate(est_scale = est_mean/est_shape) %>%
mutate(est_sd = (est_shape * est_scale^2)^0.5)
### Plot seasonal pattern for three months accumulated precipitation
tmonth <- 4
p <- ggplot(filter(seasonal_df, month(date) == tmonth), aes(x=date, y= est_mean, colour=model)) %>%
+ geom_line(size = 1) %>%
+ geom_point(data=seasonal_df %>% filter(model=="naspa" & month == tmonth)) %>%
=======
### Plot seasonal pattern for three months accumulated precipitation
#without removing biases
tmonth <- 4
p <- ggplot(filter(gam_predict, month(date) == tmonth), aes(x=date, y= est_mean, colour=model)) %>%
+ geom_line(size = 1) %>%
# + geom_point(data=gam_predict %>% filter(model=="naspa" & month == tmonth)) %>%
>>>>>>> Stashed changes
+ scale_x_date(name = "year") %>%
+ scale_y_continuous(name= "3-Month Precip Estimated Mean (mm)") %>%
#+ scale_colour_brewer(name="", type = "qual", palette = "Set2") %>%
+ labs("JFM 3-month precip(mm)") %>%
+ theme_classic(base_size = 25) %>%
+ theme(legend.position="bottom")
<<<<<<< Updated upstream
p
ggsave(filename = paste0(output_path,loc$site[1],tmonth,"temodel.png"),plot = p, width =12.5, height = 8, dpi = 300)
=======
ggsave(filename = paste0(output.p,"/",tmonth,"temodel.png"),plot = p, width =12.5, height = 8, dpi = 300)
#ggsave(filename = paste0(filename,"3.svg"), plot = p, width =12.5, height = 8, dpi = 300)
### make a new combined_df with Gridmet as model
>>>>>>> Stashed changes
min_gridm <- min((prcp_pos %>% filter(model == "gridmet"))$year)
max_gridm <- max((prcp_pos %>% filter(model == "gridmet"))$year)
min_cru <- min((prcp_pos %>% filter(model == "cru"))$year)
max_cru <- max((prcp_pos %>% filter(model == "cru"))$year)
min_naspa <- min((prcp_pos %>% filter(model == "naspa"))$year)
max_naspa <- max((prcp_pos %>% filter(model == "naspa"))$year)
<<<<<<< Updated upstream
min_gcm <- min((prcp_pos %>% filter(model == "GFDL-CM4"))$year)
max_gcm <- max((prcp_pos %>% filter(model == "GFDL-CM4"))$year)
gridmet_pred_df <- data.frame(expand.grid(year = seq(min_naspa,max_naspa),month = seq(1,12)), model = "gridmet", plot_model = "naspa") %>%
bind_rows(data.frame(expand.grid(year = seq(min_gridm,max_gridm),month = seq(1,12)),model = "gridmet", plot_model = "gridmet")) %>%
bind_rows(data.frame(expand.grid(year = seq(min_cru,max_cru),month = seq(1,12)), model = "gridmet", plot_model = "cru")) %>%
bind_rows(data.frame(expand.grid(year = seq(min_gcm,max_gcm),month = seq(1,12)), model = "gridmet", plot_model = "GFDL-CM4"))
pred_df <- data.frame(expand.grid(year = seq(min_naspa,max_naspa),month = seq(1,12)), model = "naspa", plot_model = "naspa") %>%
bind_rows(data.frame(expand.grid(year = seq(min_gridm,max_gridm),month = seq(1,12)),model = "gridmet", plot_model = "gridmet")) %>%
bind_rows(data.frame(expand.grid(year = seq(min_cru,max_cru),month = seq(1,12)), model = "cru", plot_model = "cru")) %>%
bind_rows(data.frame(expand.grid(year = seq(min_gcm,max_gcm),month = seq(1,12)), model = "GFDL-CM4", plot_model = "GFDL-CM4"))
### Make predictions based on this
GAM_predict <- predict(gam_fit, newdata = pred_df, se.fit = TRUE, type = "response")
=======
#min_gcm <- min((prcp_pos %>% filter(model == "GFDL-CM4"))$year)
#max_gcm <- max((prcp_pos %>% filter(model == "GFDL-CM4"))$year)
gridmet_pred_df <- data.frame(expand.grid(year = seq(min_naspa,max_naspa),month = seq(1,12)), model = "gridmet", plot_model = "naspa") %>%
bind_rows(data.frame(expand.grid(year = seq(min_gridm,max_gridm),month = seq(1,12)),model = "gridmet", plot_model = "gridmet")) %>%
bind_rows(data.frame(expand.grid(year = seq(min_cru,max_cru),month = seq(1,12)), model = "gridmet", plot_model = "cru")) #%>%
# bind_rows(data.frame(expand.grid(year = seq(min_gcm,max_gcm),month = seq(1,12)), model = "gridmet", plot_model = "GFDL-CM4"))
#pred_df <- data.frame(expand.grid(year = seq(min_naspa,max_naspa),month = seq(1,12)), model = "naspa", plot_model = "naspa") %>%
#  bind_rows(data.frame(expand.grid(year = seq(min_gridm,max_gridm),month = seq(1,12)),model = "gridmet", plot_model = "gridmet")) %>%
#  bind_rows(data.frame(expand.grid(year = seq(min_cru,max_cru),month = seq(1,12)), model = "cru", plot_model = "cru")) #%>%
# bind_rows(data.frame(expand.grid(year = seq(min_gcm,max_gcm),month = seq(1,12)), model = "GFDL-CM4", plot_model = "GFDL-CM4"))
### Make predictions based on this
GAM_predict <- predict(gam_fit, newdata = gridmet_pred_df, se.fit = TRUE, type = "response")
>>>>>>> Stashed changes
GAM_predict  <- GAM_predict %>%
data.frame() %>%
as_tibble() %>%
rename(est_mean = 1) %>%
rename(est_shape = 2)
GAM_predict <- GAM_predict %>%
mutate(est_shape = 1/exp(est_shape)) %>%
mutate(est_scale = est_mean/est_shape) %>%
mutate(est_sd = (est_shape * est_scale^2)^0.5)
<<<<<<< Updated upstream
set.seed(42)
modeled_df <- transform(pred_df,
=======
###############################################################
########calculate simultaneous 95% confidence interval########
##############################################################
modeled_df <- transform(gridmet_pred_df,
>>>>>>> Stashed changes
modGI = GAM_predict$est_mean,
lower = qgamma(0.025, shape = GAM_predict$est_shape,
scale = GAM_predict$est_scale),
upper = qgamma(0.975, shape = GAM_predict$est_shape,
scale = GAM_predict$est_scale),
# lowcrit = GAM_predict$est_mean + crit * GAM_predict$se.fit.1,
#  upcrit = GAM_predict$est_mean - crit * GAM_predict$se.fit.1,
lowp = GAM_predict$est_mean -  2* GAM_predict$se.fit.1,
upp = GAM_predict$est_mean +  2* GAM_predict$se.fit.1,
est_sd = GAM_predict$est_sd)
modeled_df <- modeled_df %>%
mutate(date = as.Date(paste0(year,"-",month,"-01")))
<<<<<<< Updated upstream
#Plot annual data
basis_func_palette = colorblind_pal()(8)
tmonth <- 7
p <- ggplot(data=prcp_pos %>% filter(year > 200 & month == tmonth), aes(x=year, group=model,colour = model)) +
geom_line(aes(y=precip)) +
geom_ribbon(data = modeled_df%>%filter(year > 200 & month == tmonth), aes(ymin= lowp,
ymax= upp), alpha = 0.25, fill = "black") +
# geom_ribbon(data = modeled_df%>%filter(year > 1980 & month == 4), aes(ymin= lowcrit, ymax= upcrit), fill = "black",
#              alpha = 0.5) +
geom_ribbon(data = modeled_df%>%filter(year > 200 & month == tmonth), aes(ymin= lower,
ymax= upper), alpha = 0.25, fill = "black") +
geom_line(data = modeled_df%>%filter(year > 200 & month == tmonth), aes(y=modGI)) +
# facet_wrap(~month) +
labs(title = paste0("MJJ"," modeled"),
subtitle = "",
x="year",y="3-Month ave.precip(mm)", size = 10)+
theme_classic(base_size = 20)
p
#Plot monthly data
tyear <- seq(2000,2020)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= date, group=model,colour = model)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
p <- ggplot(modeled_df, aes(x= month, y = year)) %>%
+ geom_raster(aes(fill=modGI)) %>%
+ scale_fill_viridis(name = "Mean" ) %>%
+ theme_bw() %>%
+ scale_x_continuous(name = "Year", expand = c(0, 0)) %>%
+ scale_y_continuous(name = "Month", expand = c(0, 0))
### Plot
p
#Plot monthly data
tyear <- seq(2000,2020)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= date, group=model,colour = model)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
seq(500,2100,100)
prcp_pos
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month,y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500,2100,100)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month,y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500,2100,100)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500,2100,100)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=month, group = year)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500,2100,100)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=date, group = year)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=month, group = year)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=month, group = year)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=month)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
tyear
####
tyear <- 500 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x=month)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- 500 # seq(500)
prcp_pos %>%filter(year %in%  tyear)
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
geom_line(aes(y=precip), alpha = 0.8) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
data=prcp_pos %>%filter(year %in%  tyear)
data
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month, y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(x= month(date), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear), aes(xmin = 1, xmax = 12, x= month, y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
str(prcp_pos
)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear),
aes(xmin = format(as.Date(1), format = "%m"), xmax = format(as.Date(12), format = "%m"),
x=month(date), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
format(as.Date(1), format = "%m")
xmax = format(as.Date(12), format = "%m")
xmax
month(date)
prcp_pos$date[1]
month(prcp_pos$date[1])
format(month(prcp_pos$date[1]), format = "%m")
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear),
aes(x=format(month(date),format= "%m"), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "date") +
theme_classic(base_size = 20)
p
format(month(prcp_pos$date[1000]), format = "%m")
tyear <- 1000
prcp_pos %>%filter(year %in%  tyear),
prcp_pos %>%filter(year %in%  tyear)
####
tyear <- 1000 # seq(500)
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear),
aes(x=format(month(date),format= "%m"), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
format(12, format = "%m")
format(12,format= "%m")
xmax = format(12, format = "%m")
xmin = format(1, format = "%m")
p <- ggplot(data=prcp_pos %>%filter(year %in%  tyear),
aes(xmax = xmax, xmin = xmin, x=format(month(date),format= "%m"), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
p <- ggplot(data= modeled_df,
aes(xmax = xmax, xmin = xmin, x=format(month(date),format= "%m"), y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
p <- ggplot(data= modeled_df,
aes(x = month, y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
p <- ggplot(data= modeled_df %>% filter ( year == tyear),
aes(x = month, y = precip)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
modeled_df %>% filter ( year == tyear)
p <- ggplot(data= modeled_df %>% filter ( year == tyear),
aes(x = month, y = modGI)) +
#geom_ribbon(data = modeled_df %>% filter(year %in%  tyear),
#            aes(ymin=lower,ymax=upper), alpha=0.25) +
#geom_line(data = modeled_df%>% filter(year %in%  tyear), aes(y=modGI, group = model, colour = model)) +
#facet_wrap(~year) +
# scale_colour_brewer(palette = "Set1", aesthetics = "colour", name = "Data set") +
labs(title = paste(tyear,"year modeled"),
x="date",y="3-Month ave.precip(mm)", size = 14)+
scale_x_date(name = "month") +
theme_classic(base_size = 20)
p
=======
saveRDS(modeled_df, file = paste0(output.p,"/modeled_df.rds"))
saveRDS(prcp_pos, file = paste0(output.p,"/prcp_df.rds"))
return(dur)
}
require(lubridate)
require(tidyverse)
require(mgcv)
require(dplyr)
require(viridis)
select <- dplyr::select
data_path <- "../data"
output_path <- "../output/"
#################################################################
#######                         Plotting               ##########
#################################################################
plot_model <- function(loc) {
prcp_pos<- readRDS(file = paste0(output.p,"/prcp_df.rds"))
modeled_df<- readRDS(file = paste0(output.p,"/modeled_df.rds"))
plot_ms <- c(1,4,7,10)
colours = c("naspa" = "green4", "cru" = "#1A3FD4", "gridmet" = "orangered3")
for (i in 1:length(plot_ms)) {
plotm <- plot_ms[i]
p <- ggplot(data= modeled_df %>% filter(month %in% plotm),
aes(x = year, y = modGI, group = plot_model)) +
geom_line(data= prcp_pos %>%filter(month %in% plotm),
aes(y = precip, group=model,colour = model), size = 0.7, alpha = 0.45) +
geom_ribbon(data = modeled_df%>%filter(month %in% plotm),
aes(ymin= lowp, ymax= upp,fill = plot_model), alpha = 0.5) +
geom_ribbon(data = modeled_df%>%filter(month %in% plotm),
aes(ymin= lower,ymax= upper), alpha = 0.25, fill = "grey") +
geom_line(aes(colour = plot_model), size = 1.3) +
scale_fill_manual(values = colours) +
scale_color_manual(values = colours) +
labs(title = paste(plotm,loc$site[1]),
y="3-Month ave.prcp(mm/month)",
color ='datasets')+
theme_classic(base_size = 20)
ggsave(filename = paste0(output.p,"/",plotm,"_LT2.png"),plot = p, width =12.5, height = 8, dpi = 300)
ggsave(filename = paste0(output.p,"/",plotm,"_LT2.svg"),plot = p, width =12.5, height = 8, dpi = 300)
}
return()
}
for (j in seq(7, length(site_list))){
loc <- site_list[[j]]
dir.create(file.path(output_path,loc$site[1]), recursive = FALSE)
output.p <- file.path(output_path, loc$site[1])
inst_download(loc)
yrs<- naspa_download(loc)
knn_result <- knn(loc)
GI_model(loc)
plot_model(loc)
}
data_path <- "../data/"
output_path <- "../output/"
for (j in seq(7, length(site_list))){
loc <- site_list[[j]]
dir.create(file.path(output_path,loc$site[1]), recursive = FALSE)
output.p <- file.path(output_path, loc$site[1])
inst_download(loc)
yrs<- naspa_download(loc)
knn_result <- knn(loc)
GI_model(loc)
plot_model(loc)
}
modeled_df<- readRDS(file = paste0(output.p,"/modeled_df.rds"))
modeled_df
prcp_pos<- readRDS(file = paste0(output.p,"/prcp_df.rds"))
head(prcp_pos)
year_seq <-  c(seq(0, 2020, 200),2020)
month_seq <- seq(1,12)
plot_dist <- tibble(year = NA, month = NA,  ymin = NA, lower = NA, middle = NA, upper = NA, ymax = NA)
head(plot_dist)
readRDS(paste0(output.p, "/model.rds"))
a<-readRDS(paste0(output.p, "/model.rds"))
head(a)
a<- gam_fit
gam_fit <a-
gam_fit <- a
head(gam_fit)
#gam_fit <- readRDS( file =paste0(output.p,"/model.rds"))
### Predict results with the new data
gam_predict <- predict(gam_fit, type="response")
gam_predict  <- gam_predict  %>%
data.frame() %>%
as_tibble() %>%
rename(est_mean = 1) %>%
rename(est_shape = 2) %>%
bind_cols(prcp_pos) %>%
select(date, month,  model, est_mean, est_shape)
head(gam_predict)
#gam_fit <- readRDS( file =paste0(output.p,"/model.rds"))
### Predict results with the new data
gam_predict <- predict(gam_fit, type="response")
gam_predict  <- gam_predict  %>%
data.frame() %>%
as_tibble() %>%
rename(est_mean = 1) %>%
rename(est_shape = 2) %>%
bind_cols(prcp_pos)
head(gam_predict)
>>>>>>> Stashed changes
