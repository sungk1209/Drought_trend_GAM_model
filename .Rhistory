qnorm(-1.5)
qnorm(0.006)
qnorm(0.06)
qnorm(0.064)
qnorm(0.065)
qnorm(0.066)
pnorm(-1.5)
require(lubridate)
require(tidyverse)
require(mgcv)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
require(viridis)
select <- dplyr::select
data_path <- "../data"
output_path <- "../output/"
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
select <- dplyr::select
data_path <- "../data/"
output_path <- "../output/"
require(lubridate)
require(tidyverse)
require(mgcv)
require(dplyr)
require(viridis)
select <- dplyr::select
data_path <- "../data"
output_path <- "../output/"
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
select <- dplyr::select
data_path <- "../data/"
output_path <- "../output/"
### Read in
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
select <- dplyr::select
data_path <- "../data/"
output_path <- "../output/"
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
select <- dplyr::select
data_path <- "../data/"
output_path <- "../output/"
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
select <- dplyr::select
data_path <- "../data/"
output_path <- "../output/"
0.4+0.7+0.35
1.45/3
getwd()
setwd("D:/Paper2/github/")
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
data_path <- "../data/"
output_path <- "../output/"
select <- dplyr::select
site_list <- list()
site_list[1] <- list(data.frame(site="okc_OK",
lon=c(-98,-97.5),
lat= c(35.0,35.5)))
site_list[2] <- list(data.frame(site="phx_AZ",
lon= c(-112.5,-112.0),
lat=c(33.50,34.00)))
site_list[3] <- list(data.frame(site="Den_CO",
lon= c(-105.0,-104.5),
lat=c(39.50,40.00)))
site_list[4] <- list(data.frame(site="Aber_WA",
lon= c(-124.0,-123.5),
lat=c(46.50,47.00)))
site_list[5] <- list(data.frame(site="Alb_GA",
lon= c(-84.5,-84.0),
lat=c(31.50,32.00)))
site_list[6] <- list(data.frame(site="Mrv_OH",
lon= c(-83.5,-83.0),
lat=c(40.00,40.50)))
site_list[7] <- list(data.frame(site="Mor_MN",
lon= c(-96.0,-95.5),
lat=c(45.50,46.00)))
site_list[8] <- list(data.frame(site="Nyc_NY",
lon= c(-74.5,-74.0),
lat=c(40.50,41.00)))
site_list[9] <- list(data.frame(site="Los_CA",
lon= c(-118.5,-118.0),
lat=c(34.00,34.50)))
site_list[10] <- list(data.frame(site="Wax_TX",
lon= c(-97.0,-96.5),
lat=c(32.00,32.50)))
site_list[11] <- list(data.frame(site="SJn_CO",
lon= c(-106.5,-106.0),
lat=c(37.50,38.00)))
site_list[12] <- list(data.frame(site="Cwa_NC",
lon= c(-79.0,-78.5),
lat=c(33.50,34.00)))
site_list[13] <- list(data.frame(site="Grd_MT",
lon= c(-111,-110.5),
lat=c(44.5,45.00)))
site_list[14] <- list(data.frame(site="Roe_NM",
lon= c(-109,-108.5),
lat=c(31.0,31.50)))
j <- 1
loc <- site_list[[j]]
dir.create(file.path(output_path, loc$site[1]), recursive = FALSE)
output.p <- file.path(output_path, loc$site[1])
title <- c("NDJ", "DJF", "JFM", "FMA", "MAM", "AMJ", "MJJ", "JJA", "JAS", "ASO", "SON", "OND")
gpcc_df <- readRDS(file = paste0(output.p,"/gpcc_df.rds"))
gpcc_df <- gpcc_df %>% mutate(month = month(date))
naspa_spi3<- readRDS(file = paste0(output.p,"/naspa_spi3.rds"))
paras<- gpcc_df %>% select(date,shape3, rate3) %>%
group_by(month(date)) %>%
summarise(shape = mean(shape3), rate = mean(rate3)) %>%
rename(month =`month(date)`)
n_library <- length(gpcc_df$precip)
### Convert library into a dataframe
library_df <- data.frame(i = seq(1,n_library), spi_thisjuly = as.numeric(gpcc_df$spi3)) %>%
mutate(spi_nextmay = dplyr::lead(gpcc_df$spi5, n=9,  default = NA))%>%
mutate(spi_nextjuly = dplyr::lead(gpcc_df$spi3, n=12,  default = NA))%>%
drop_na()
#library_df[1:50,]
library_df <- library_df %>% select(-i)
head(gpcc_df)
gpcc_df
View(gpcc_df)
i <- 10
begin.y <- min(naspa_spi3$year)
end.y <- max(naspa_spi3$year) - 2
predicted_df <- data.frame(year = NA)
n_neighbors <- i
for (year_i in c(begin.y:end.y)){
#### Eventually put this in a loop through years
date_subset <- seq(as.Date(paste0(year_i,"-08-01")),
as.Date(paste0(year_i+1,"-08-01")),
by = "month")-1
naspa_subset <- naspa_spi3 %>%
filter(date %in% date_subset)
naspa_points <- data.frame(spi_thisjuly = naspa_subset$spi3[[1]],
spi_nextapr = naspa_subset$spi5[[10]],
spi_nextjuly = naspa_subset$spi3[[13]])
if (sum(is.na(naspa_points))>0) {
next
}
### Find the k closest points
closest <- nn2(data= library_df,
query = naspa_points, k=n_neighbors)
#want to improve: pick only July
for(k in seq(1,n_neighbors)){
closest_k <- closest$nn.idx[[k]]
fragment_k <- library_df[seq(closest_k, closest_k+12),]
naspa_subset_k <- naspa_subset %>%
mutate(iter = paste0("iter_", k)) %>%
mutate(spi3 = fragment_k$spi_thisjuly)
if(k == 1){
naspa_subset_iter <- naspa_subset_k
} else {
naspa_subset_iter <- naspa_subset_iter %>% bind_rows(naspa_subset_k)
}
}
#smoothed <- loess(spi3 ~ as.numeric(date),data = naspa_subset_iter)
#predicted_k <- data.frame(date= date_subset,
#                         spi3 = predict(smoothed, newdata = naspa_subset$date))
if(is.na(predicted_df$year[1]) == TRUE){
predicted_df <- naspa_subset_iter
} else {
predicted_df <- predicted_df %>% bind_rows(naspa_subset_iter)
}
}
head(predicted_df)
predicted_df <- predicted_df %>%
mutate(month = month(date)) %>%
right_join(paras, by= "month") %>%
mutate(prob = pnorm(spi3)) %>%
mutate(precip = qgamma(prob, shape = shape, rate = rate))
head(predicted_df)
require(lubridate)
require(tidyverse)
require(dplyr)
require(ncdf4)
require(fitdistrplus)
require(zoo)
library(RANN)
data_path <- "../data/"
output_path <- "../output/"
select <- dplyr::select
site_list <- list()
site_list[1] <- list(data.frame(site="okc_OK",
lon=c(-98,-97.5),
lat= c(35.0,35.5)))
site_list[2] <- list(data.frame(site="phx_AZ",
lon= c(-112.5,-112.0),
lat=c(33.50,34.00)))
site_list[3] <- list(data.frame(site="Den_CO",
lon= c(-105.0,-104.5),
lat=c(39.50,40.00)))
site_list[4] <- list(data.frame(site="Aber_WA",
lon= c(-124.0,-123.5),
lat=c(46.50,47.00)))
site_list[5] <- list(data.frame(site="Alb_GA",
lon= c(-84.5,-84.0),
lat=c(31.50,32.00)))
site_list[6] <- list(data.frame(site="Mrv_OH",
lon= c(-83.5,-83.0),
lat=c(40.00,40.50)))
site_list[7] <- list(data.frame(site="Mor_MN",
lon= c(-96.0,-95.5),
lat=c(45.50,46.00)))
site_list[8] <- list(data.frame(site="Nyc_NY",
lon= c(-74.5,-74.0),
lat=c(40.50,41.00)))
site_list[9] <- list(data.frame(site="Los_CA",
lon= c(-118.5,-118.0),
lat=c(34.00,34.50)))
site_list[10] <- list(data.frame(site="Wax_TX",
lon= c(-97.0,-96.5),
lat=c(32.00,32.50)))
site_list[11] <- list(data.frame(site="SJn_CO",
lon= c(-106.5,-106.0),
lat=c(37.50,38.00)))
site_list[12] <- list(data.frame(site="Cwa_NC",
lon= c(-79.0,-78.5),
lat=c(33.50,34.00)))
site_list[13] <- list(data.frame(site="Grd_MT",
lon= c(-111,-110.5),
lat=c(44.5,45.00)))
site_list[14] <- list(data.frame(site="Roe_NM",
lon= c(-109,-108.5),
lat=c(31.0,31.50)))
j <- 1
loc <- site_list[[j]]
output.p <- file.path(output_path, loc$site[1])
gam_fit <- readRDS( file =paste0(output.p,"/model.rds"))
fd <- derivSimulCI(gam_fit, samples = 10000, n = 200)
?with
with(data.frame(u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12)),
list(summary(glm(lot1 ~ log(u), family = Gamma)),
summary(glm(lot2 ~ log(u), family = Gamma))))
with(ToothGrowth, {
boxplot(len ~ dose, boxwex = 0.25, at = 1:3 - 0.2,
subset = (supp == "VC"), col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length", ylim = c(0, 35))
boxplot(len ~ dose, add = TRUE, boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
})
tmpf <- tempfile()
curl_download("https://gist.githubusercontent.com/gavinsimpson/ca18c9c789ef5237dbc6/raw/295fc5cf7366c831ab166efaee42093a80622fa8/derivSimulCI.R", tmpf)
??curl_download
tmpf <- tempfile()
tmpf
curl::curl_download("https://gist.githubusercontent.com/gavinsimpson/ca18c9c789ef5237dbc6/raw/295fc5cf7366c831ab166efaee42093a80622fa8/derivSimulCI.R", tmpf)
source(tempf)
source(tmpf)
fd <- derivSimulCI(m1, samples = 10000, n = 200)
?derivSimulCI
??derivSimulCI
require(gratia)
?derivSimulCI
??derivSimulCI
draw(gam_fit)
print(gam_fit)
draw(gam_fit)
derivatives(gam_fit)
str(gam_fit)
short_gam <- gam_fit %>% filter(year > 1850)
derivatives(gam_fit)
response_derivatives(gam_fit)
update.packages(gratia)
update.packages("gratia")
response_derivatives(gam_fit)
set.seed(1)
> N <- 100
N <-100
dat <- data.frame(x = runif(N, min = 1, max = 20))
dat
dat <- transform(dat, y = 3 + (1.45 * x) + rnorm(N, mean = 2, sd = 3))
head(dat)
